[{"/Users/mesfint/Desktop/MentorShip/Projects/weather-app/src/index.js":"1","/Users/mesfint/Desktop/MentorShip/Projects/weather-app/src/App.js":"2","/Users/mesfint/Desktop/MentorShip/Projects/weather-app/src/components/Layout.js":"3","/Users/mesfint/Desktop/MentorShip/Projects/weather-app/src/components/Header.js":"4","/Users/mesfint/Desktop/MentorShip/Projects/weather-app/src/components/SearchWeather.js":"5","/Users/mesfint/Desktop/MentorShip/Projects/weather-app/src/components/WeatherData.js":"6","/Users/mesfint/Desktop/MentorShip/Projects/weather-app/src/components/Footer.js":"7","/Users/mesfint/Desktop/MentorShip/Projects/weather-app/src/utils.js":"8"},{"size":225,"mtime":1612359216535,"results":"9","hashOfConfig":"10"},{"size":300,"mtime":1613470069415,"results":"11","hashOfConfig":"10"},{"size":1317,"mtime":1613470065844,"results":"12","hashOfConfig":"10"},{"size":899,"mtime":1613392511921,"results":"13","hashOfConfig":"10"},{"size":4700,"mtime":1613417358958,"results":"14","hashOfConfig":"10"},{"size":6133,"mtime":1613392843699,"results":"15","hashOfConfig":"10"},{"size":907,"mtime":1613417301678,"results":"16","hashOfConfig":"10"},{"size":1551,"mtime":1613393006308,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1h9icbc",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mesfint/Desktop/MentorShip/Projects/weather-app/src/index.js",[],["37","38"],"/Users/mesfint/Desktop/MentorShip/Projects/weather-app/src/App.js",[],"/Users/mesfint/Desktop/MentorShip/Projects/weather-app/src/components/Layout.js",["39"],"import React, { useState } from \"react\";\n\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Header } from \"./Header\";\nimport Footer from \"./Footer\";\nimport { SearchWeather } from \"./SearchWeather\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    /*  padding: '50px 90px', */\n    margin: \"0 auto\",\n    overflow: \"hidden\",\n  },\n  items: {\n    objectFit: \"cover\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport const Layout = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <div>\n        <Grid lg={12} container spacing={2}>\n          <Grid item lg={12} xs={12} className={classes.items}>\n            <Paper className={classes.paper}>\n              <Header />\n            </Paper>\n          </Grid>\n          <Grid item lg={12} sm={12} className={classes.items}>\n            <Paper className={classes.paper}>\n              {/* search input section */}\n              <SearchWeather />\n            </Paper>\n          </Grid>\n\n          <Grid item lg={12} sm={12} className={classes.items}>\n            <Paper className={classes.paper}>\n              <Footer />{\" \"}\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n};\n","/Users/mesfint/Desktop/MentorShip/Projects/weather-app/src/components/Header.js",[],"/Users/mesfint/Desktop/MentorShip/Projects/weather-app/src/components/SearchWeather.js",["40","41"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { WeatherData } from \"./WeatherData\";\nimport errorImage from \"../assets/directions.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  citySearchInput: {\n    width: \"45vw\",\n    fontSize: \"1.2rem\",\n    outlined: \"none\",\n    marginTop: \"-9rem\",\n  },\n  errorSearch: {\n    width: \"45vw\",\n    fontSize: \"1.2rem\",\n    outlined: \"none\",\n    marginTop: \"-9rem\",\n  },\n  alert: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"45vw\",\n    marginTop: \"1rem\",\n    marginBottom: \"1rem\",\n    margin: \"0 auto\",\n  },\n  form: {\n    width: \"80%\",\n  },\n  spinner: {\n    color: \"#53d6bc\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n  },\n  errorImage: {\n    padding: \"1rem\",\n    height: \"370px\",\n  },\n}));\n\nexport const SearchWeather = () => {\n  const classes = useStyles();\n\n  const [search, setSearch] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchError, setSearchError] = useState(null);\n  const [weather, setWeather] = useState({\n    city: \"\",\n    country: \"\",\n    temp: 0,\n    pressure: \"\",\n    humidity: \"\",\n    description: \"\",\n    icon: \"\",\n    wind: \"\",\n    visibility: \"\",\n  });\n\n  const getLocation = async () => {\n    try {\n      await axios.get(\"https://ipapi.co/json/\").then((res) => {\n        getWeatherInfo(null, res.data.city);\n      });\n      setIsLoading(false);\n    } catch (error) {\n      setSearchError(null);\n    }\n  };\n\n  const API_KEY = process.env.REACT_APP_OPEN_WEATHER_API_KEY;\n\n  const getWeatherInfo = async (e, initialCity) => {\n    try {\n      e?.preventDefault();\n      await axios\n        .get(\n          `https://api.openweathermap.org/data/2.5/weather?q=${\n            search ? search : initialCity\n          }&appid=${API_KEY}&units=metric`\n        )\n\n        .then((res) => {\n          setWeather({\n            city: res.data.name,\n            country: res.data.sys.country,\n            temp: Math.round(res.data.main.temp),\n            pressure: res.data.main.pressure,\n            humidity: res.data.main.humidity,\n            description: res.data.weather[0].description,\n            icon: res.data.weather[0].icon,\n            wind: res.data.wind.speed,\n            visibility: res.data.visibility,\n            dt: res.data.dt,\n            timezone: res.data.timezone,\n          });\n          setIsLoading(false);\n          setSearchError(null);\n          setSearch(\"\");\n        });\n    } catch (error) {\n      //handleValidSearchTerm();\n      setSearchError(true);\n    }\n  };\n  useEffect(() => {\n    getLocation();\n  }, []);\n\n  useEffect(() => {\n    setWeather(weather);\n  });\n  return (\n    <>\n      <Grid item sm={12}>\n        <form onSubmit={getWeatherInfo} className=\"form\">\n          <TextField\n            className={\n              searchError ? classes.errorSearch : classes.citySearchInput\n            }\n            type=\"text\"\n            placeholder=\"search city...\"\n            variant=\"outlined\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon\n                    onClick={(e) => getWeatherInfo(e)}\n                    style={{ cursor: \"pointer\" }}\n                  />{\" \"}\n                </InputAdornment>\n              ),\n            }}\n          />\n        </form>\n      </Grid>\n\n      {searchError && (\n        <div>\n          <h2 style={{ color: \"red\", marginTop: \"-15px\" }}>\n            No country found!!!\n          </h2>\n\n          <img alt=\"error\" src={errorImage} className={classes.errorImage} />\n        </div>\n      )}\n      {isLoading && (\n        <div className={classes.root}>\n          <CircularProgress disableShrink className={classes.spinner} />\n        </div>\n      )}\n      <WeatherData\n        city={weather.city}\n        country={weather.country}\n        temp={weather.temp}\n        min={weather.min}\n        max={weather.max}\n        pressure={weather.pressure}\n        humidity={weather.humidity}\n        description={weather.description}\n        icon={weather.icon}\n        wind={weather.wind}\n        visibility={weather.visibility}\n        dt={weather.dt}\n        timezone={weather.timezone}\n        searchError={searchError}\n      />\n    </>\n  );\n};\n","/Users/mesfint/Desktop/MentorShip/Projects/weather-app/src/components/WeatherData.js",[],"/Users/mesfint/Desktop/MentorShip/Projects/weather-app/src/components/Footer.js",[],"/Users/mesfint/Desktop/MentorShip/Projects/weather-app/src/utils.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":25},{"ruleId":"50","severity":1,"message":"51","line":115,"column":6,"nodeType":"52","endLine":115,"endColumn":8,"suggestions":"53"},{"ruleId":"50","severity":1,"message":"54","line":117,"column":3,"nodeType":"48","endLine":117,"endColumn":12,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLocation'. Either include it or remove the dependency array.","ArrayExpression",["58"],"React Hook useEffect contains a call to 'setWeather'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [weather] as a second argument to the useEffect Hook.",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},"Update the dependencies array to be: [getLocation]",{"range":"64","text":"65"},"Add dependencies array: [weather]",{"range":"66","text":"67"},[2955,2957],"[getLocation]",[3009,3009],", [weather]"]